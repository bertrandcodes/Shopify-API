{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery getProducts($ids: [ID!]!){\\n    nodes(ids: $ids){\\n      ... on Product{\\n        title\\n        handle\\n        id\\n      }\\n    }\\n  }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nfunction ProductList() {\n  _s();\n\n  var _useQuery = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: {\n      ids: store.get('ids')\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  console.log(data);\n  return __jsx(Card, null, __jsx(ResourceList, {\n    showHeader: true,\n    resourceName: {\n      singular: 'Product',\n      plural: plural\n    },\n    items: data.nodes\n  })) // <div>\n  //   <h1>Hello from Productlist</h1>\n  //   {\n  //     data.nodes.map(item => {\n  //       return (\n  //         <p key={item.id}>{item.title}</p>\n  //       )\n  //     })\n  //   }\n  // </div>\n  ;\n}\n\n_s(ProductList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/bertrandshao/Desktop/Repositories/Shopify-API/components/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ProductList","variables","ids","get","loading","error","data","message","console","log","singular","plural","nodes"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,QAAgE,kBAAhE;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,kBAAkB,GAAGR,GAAH,mBAAxB;;AAWA,SAASS,WAAT,GAAuB;AAAA;;AAAA,kBAEYR,QAAQ,CAACO,kBAAD,EAAqB;AAAEE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEJ,KAAK,CAACK,GAAN,CAAU,KAAV;AAAP;AAAb,GAArB,CAFpB;AAAA,MAEbC,OAFa,aAEbA,OAFa;AAAA,MAEJC,KAFI,aAEJA,KAFI;AAAA,MAEGC,IAFH,aAEGA,IAFH;;AAIrB,MAAIF,OAAJ,EAAa,OAAO,gCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SACE,MAAC,IAAD,QACE,MAAC,YAAD;AACA,IAAA,UAAU,MADV;AAEA,IAAA,YAAY,EAAE;AAACI,MAAAA,QAAQ,EAAE,SAAX;AAAsBC,MAAAA,MAAM,EAANA;AAAtB,KAFd;AAGA,IAAA,KAAK,EAAEL,IAAI,CAACM;AAHZ,IADF,CADF,CAQE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBF;AAmBD;;GA5BQZ,W;UAE0BR,Q;;;KAF1BQ,W;AA8BT,eAAeA,WAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\n\nconst GET_PRODUCTS_BY_ID = gql`\nquery getProducts($ids: [ID!]!){\n    nodes(ids: $ids){\n      ... on Product{\n        title\n        handle\n        id\n      }\n    }\n  }`;\n\nfunction ProductList() {\n\n  const { loading, error, data } = useQuery(GET_PRODUCTS_BY_ID, { variables: { ids: store.get('ids') } })\n\n  if (loading) return <div>Loading...</div>\n  if (error) return <div>{error.message}</div>\n\n  console.log(data)\n\n  return (\n    <Card>\n      <ResourceList\n      showHeader\n      resourceName={{singular: 'Product', plural}}\n      items={data.nodes}\n      />\n    </Card>\n    // <div>\n    //   <h1>Hello from Productlist</h1>\n    //   {\n    //     data.nodes.map(item => {\n    //       return (\n    //         <p key={item.id}>{item.title}</p>\n    //       )\n    //     })\n    //   }\n    // </div>\n  )\n}\n\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}