{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Button, Card, Layout, Page, ResourceList, Stack } from '@shopify/polaris';\nconst CREATE_SCRIPT_TAG = gql`\nmutation scriptTagCreate($input: ScriptTagInput!){\n    scriptTagCreate(input: $input){\n        scriptTag {\n            id\n        }\n        userErrors {\n            field\n            message\n        }\n    }\n}`;\nconst QUERY_SCRIPTTAGS = gql`\nquery{\n    scriptTags(first:5){\n      edges{\n        node{\n          id\n          src\n          displayScope\n        }\n      }\n    }\n  }\n`;\nconst DELETE_SCRIPTAG = gql`\nmutation scriptTagDelete($id: ID!){\n    scriptTagDelete(id: $id){\n        deletedScriptTagId\n    \t\tuserErrors{\n          field\n          message\n        }\n    }\n}\n`;\n\nfunction ScriptPage() {\n  const [createScripts] = useMutation(CREATE_SCRIPT_TAG);\n  const [deleteScripts] = useMutation(DELETE_SCRIPTAG);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY_SCRIPTTAGS);\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  return __jsx(\"p\", null) // <Page>\n  //     <Layout>\n  //         <Layout.Section>\n  //             <Card title=\"These are the Script Tags:\" sectioned>\n  //                 <p>\n  //                     Create or Delete a Script Tag\n  //                 </p>\n  //             </Card>\n  //         </Layout.Section>\n  //         <Layout.Section secondary>\n  //             <Card title=\"Delete Tag\" sectioned>\n  //                 <Button\n  //                     primary\n  //                     size=\"slim\"\n  //                     type=\"submit\" onClick={() => {\n  //                         createScripts({\n  //                             variables: {\n  //                                 input: {\n  //                                     src: \"https://e426939d3a5e.ngrok.io/test-script.js\",\n  //                                     displayScope: \"ALL\"\n  //                                 }\n  //                             },\n  //                             refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\n  //                         })\n  //                     }}>Create Script Tag</Button>\n  //             </Card>\n  //         </Layout.Section>\n  //         <Layout.Section>\n  //             <Card>\n  //                 <ResourceList\n  //                     showHeader\n  //                     resourceName={{ singular: 'Script', plural: 'Scripts' }}\n  //                     items={data.scriptTags.edges}\n  //                     renderItem={item => {\n  //                         return (\n  //                             <ResourceList.Item id={item.id}>\n  //                                 <Stack>\n  //                                     <Stack.Item>\n  //                                         <p>\n  //                                             {item.node.id}\n  //                                         </p>\n  //                                     </Stack.Item>\n  //                                     <Stack.Item>\n  //                                         <Button type='submit' onClick={() => {\n  //                                             deleteScripts({\n  //                                                 variables: {\n  //                                                     id: item.node.id\n  //                                                 },\n  //                                                 refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\n  //                                             })\n  //                                         }}>\n  //                                             Delete Script Tag\n  //                                         </Button>\n  //                                     </Stack.Item>\n  //                                 </Stack>\n  //                             </ResourceList.Item>\n  //                         )\n  //                     }}\n  //                 />\n  //             </Card>\n  //         </Layout.Section>\n  //     </Layout>\n  // </Page>\n  ;\n}\n\nexport default ScriptPage; // <div>\n//     <h1>These are the script tags right now:</h1>\n//     <button type='submit' onClick={() => {\n//         console.log(createScripts)\n//         createScripts({\n//             variables: {\n//                 input: {\n//                     src: \"https://fd8b3860e19d.ngrok.io/test-script.js\",\n//                     displayScope: \"ALL\"\n//                 }\n//             },\n//             refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\n//         })\n//     }}>\n//         Create Script Tag\n//     </button>\n//     {\n//         data.scriptTags.edges.map(item => {\n//             return (\n//                 <div key={item.node.id}>\n//                     <p>\n//                         {item.node.id}\n//                     </p>\n//                     <button type='submit' onClick={() => {\n//                         deleteScripts({\n//                             variables: {\n//                                 id: item.node.id\n//                             },\n//                             refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\n//                         })\n//                     }}>Delete Script Tag</button>\n//                 </div>\n//             )\n//         })\n//     }\n// </div >","map":{"version":3,"sources":["/Users/bertrandshao/Desktop/Repositories/Shopify-API/pages/script-page.js"],"names":["gql","useQuery","useMutation","Button","Card","Layout","Page","ResourceList","Stack","CREATE_SCRIPT_TAG","QUERY_SCRIPTTAGS","DELETE_SCRIPTAG","ScriptPage","createScripts","deleteScripts","loading","error","data","message"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,YAArC,EAAmDC,KAAnD,QAAgE,kBAAhE;AAEA,MAAMC,iBAAiB,GAAGT,GAAI;;;;;;;;;;;EAA9B;AAaA,MAAMU,gBAAgB,GAAGV,GAAI;;;;;;;;;;;;CAA7B;AAcA,MAAMW,eAAe,GAAGX,GAAI;;;;;;;;;;CAA5B;;AAYA,SAASY,UAAT,GAAsB;AAElB,QAAM,CAACC,aAAD,IAAkBX,WAAW,CAACO,iBAAD,CAAnC;AACA,QAAM,CAACK,aAAD,IAAkBZ,WAAW,CAACS,eAAD,CAAnC;AACA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BhB,QAAQ,CAACS,gBAAD,CAAzC;AAEA,MAAIK,OAAJ,EAAa,OAAO,gCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAEX,SACI,gBADJ,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhEJ;AAkEH;;AAED,eAAeN,UAAf,C,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Button, Card, Layout, Page, ResourceList, Stack } from '@shopify/polaris';\n\nconst CREATE_SCRIPT_TAG = gql`\nmutation scriptTagCreate($input: ScriptTagInput!){\n    scriptTagCreate(input: $input){\n        scriptTag {\n            id\n        }\n        userErrors {\n            field\n            message\n        }\n    }\n}`;\n\nconst QUERY_SCRIPTTAGS = gql`\nquery{\n    scriptTags(first:5){\n      edges{\n        node{\n          id\n          src\n          displayScope\n        }\n      }\n    }\n  }\n`\n\nconst DELETE_SCRIPTAG = gql`\nmutation scriptTagDelete($id: ID!){\n    scriptTagDelete(id: $id){\n        deletedScriptTagId\n    \t\tuserErrors{\n          field\n          message\n        }\n    }\n}\n`\n\nfunction ScriptPage() {\n\n    const [createScripts] = useMutation(CREATE_SCRIPT_TAG)\n    const [deleteScripts] = useMutation(DELETE_SCRIPTAG)\n    const { loading, error, data } = useQuery(QUERY_SCRIPTTAGS)\n\n    if (loading) return <div>Loading...</div>\n    if (error) return <div>{error.message}</div>\n\n    return (\n        <p></p>\n        // <Page>\n        //     <Layout>\n        //         <Layout.Section>\n        //             <Card title=\"These are the Script Tags:\" sectioned>\n        //                 <p>\n        //                     Create or Delete a Script Tag\n        //                 </p>\n        //             </Card>\n        //         </Layout.Section>\n        //         <Layout.Section secondary>\n        //             <Card title=\"Delete Tag\" sectioned>\n        //                 <Button\n        //                     primary\n        //                     size=\"slim\"\n        //                     type=\"submit\" onClick={() => {\n        //                         createScripts({\n        //                             variables: {\n        //                                 input: {\n        //                                     src: \"https://e426939d3a5e.ngrok.io/test-script.js\",\n        //                                     displayScope: \"ALL\"\n        //                                 }\n        //                             },\n        //                             refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\n        //                         })\n        //                     }}>Create Script Tag</Button>\n        //             </Card>\n        //         </Layout.Section>\n        //         <Layout.Section>\n        //             <Card>\n        //                 <ResourceList\n        //                     showHeader\n        //                     resourceName={{ singular: 'Script', plural: 'Scripts' }}\n        //                     items={data.scriptTags.edges}\n        //                     renderItem={item => {\n        //                         return (\n        //                             <ResourceList.Item id={item.id}>\n        //                                 <Stack>\n        //                                     <Stack.Item>\n        //                                         <p>\n        //                                             {item.node.id}\n        //                                         </p>\n        //                                     </Stack.Item>\n        //                                     <Stack.Item>\n        //                                         <Button type='submit' onClick={() => {\n        //                                             deleteScripts({\n        //                                                 variables: {\n        //                                                     id: item.node.id\n        //                                                 },\n        //                                                 refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\n        //                                             })\n        //                                         }}>\n        //                                             Delete Script Tag\n        //                                         </Button>\n        //                                     </Stack.Item>\n        //                                 </Stack>\n        //                             </ResourceList.Item>\n        //                         )\n        //                     }}\n        //                 />\n        //             </Card>\n        //         </Layout.Section>\n        //     </Layout>\n        // </Page>\n    )\n}\n\nexport default ScriptPage;\n\n\n    // <div>\n    //     <h1>These are the script tags right now:</h1>\n    //     <button type='submit' onClick={() => {\n    //         console.log(createScripts)\n    //         createScripts({\n    //             variables: {\n    //                 input: {\n    //                     src: \"https://fd8b3860e19d.ngrok.io/test-script.js\",\n    //                     displayScope: \"ALL\"\n    //                 }\n    //             },\n    //             refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\n    //         })\n    //     }}>\n    //         Create Script Tag\n    //     </button>\n\n    //     {\n    //         data.scriptTags.edges.map(item => {\n    //             return (\n    //                 <div key={item.node.id}>\n    //                     <p>\n    //                         {item.node.id}\n    //                     </p>\n    //                     <button type='submit' onClick={() => {\n    //                         deleteScripts({\n    //                             variables: {\n    //                                 id: item.node.id\n    //                             },\n    //                             refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\n    //                         })\n    //                     }}>Delete Script Tag</button>\n    //                 </div>\n\n    //             )\n    //         })\n    //     }\n    // </div >"]},"metadata":{},"sourceType":"module"}