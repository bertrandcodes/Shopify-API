{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\nmutation scriptTagDelete($id: ID!){\\n    scriptTagDelete(id: $id){\\n        deletedScriptTagId\\n    \\t\\tuserErrors{\\n          field\\n          message\\n        }\\n    }\\n}\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\nquery{\\n    scriptTags(first:5){\\n      edges{\\n        node{\\n          id\\n          src\\n          displayScope\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nmutation scriptTagCreate($input: ScriptTagInput!){\\n    scriptTagCreate(input: $input){\\n        scriptTag {\\n            id\\n        }\\n        userErrors {\\n            field\\n            message\\n        }\\n    }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Button, Card, Layout, Page, ResourceList, Stack } from '@shopify/polaris';\nvar CREATE_SCRIPT_TAG = gql(_templateObject());\nvar QUERY_SCRIPTTAGS = gql(_templateObject2());\nvar DELETE_SCRIPTAG = gql(_templateObject3());\n\nfunction ScriptPage() {\n  _s();\n\n  var _useMutation = useMutation(CREATE_SCRIPT_TAG),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createScripts = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_SCRIPTAG),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteScripts = _useMutation4[0];\n\n  var _useQuery = useQuery(QUERY_SCRIPTTAGS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"These are the Script Tags:\",\n    sectioned: true\n  }, __jsx(\"p\", null, \"Create or delete\"))), __jsx(Layout.Section, {\n    secondary: true\n  }, __jsx(Card, {\n    title: \"Delete Tag\",\n    sectioned: true\n  }, __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    type: \"submit\",\n    onClick: function onClick() {\n      createScripts({\n        variables: {\n          input: {\n            src: \"https://e426939d3a5e.ngrok.io/test-script.js\",\n            displayScope: \"ALL\"\n          },\n          refetchQueries: [{\n            query: QUERY_SCRIPTTAGS\n          }]\n        }\n      });\n    }\n  }, \"Create Script Tag\"))), __jsx(Layout.Section, null, __jsx(Card, null, __jsx(ResourceList, {\n    showHeader: true,\n    resourceName: {\n      singular: 'Script',\n      plural: 'Scripts'\n    },\n    items: data.scriptTags.edges,\n    renderItem: function renderItem(item) {\n      return __jsx(ResourceList.Item, {\n        id: item.id\n      }, __jsx(Stack, null));\n    }\n  })))));\n}\n\n_s(ScriptPage, \"oFMv2X7K+OIhMiy0V8t2RQEah2A=\", false, function () {\n  return [useMutation, useMutation, useQuery];\n});\n\n_c = ScriptPage;\nexport default ScriptPage; // <div>\n//     <h1>These are the script tags right now:</h1>\n//     <button type='submit' onClick={() => {\n//         console.log(createScripts)\n//         createScripts({\n//             variables: {\n//                 input: {\n//                     src: \"https://fd8b3860e19d.ngrok.io/test-script.js\",\n//                     displayScope: \"ALL\"\n//                 }\n//             },\n//             refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\n//         })\n//     }}>\n//         Create Script Tag\n//     </button>\n//     {\n//         data.scriptTags.edges.map(item => {\n//             return (\n//                 <div key={item.node.id}>\n//                     <p>\n//                         {item.node.id}\n//                     </p>\n//                     <button type='submit' onClick={() => {\n//                         deleteScripts({\n//                             variables: {\n//                                 id: item.node.id\n//                             },\n//                             refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\n//                         })\n//                     }}>Delete Script Tag</button>\n//                 </div>\n//             )\n//         })\n//     }\n// </div >\n\nvar _c;\n\n$RefreshReg$(_c, \"ScriptPage\");","map":{"version":3,"sources":["/Users/bertrandshao/Desktop/Repositories/Shopify-API/pages/script-page.js"],"names":["gql","useQuery","useMutation","Button","Card","Layout","Page","ResourceList","Stack","CREATE_SCRIPT_TAG","QUERY_SCRIPTTAGS","DELETE_SCRIPTAG","ScriptPage","createScripts","deleteScripts","loading","error","data","message","variables","input","src","displayScope","refetchQueries","query","singular","plural","scriptTags","edges","item","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqCC,YAArC,EAAmDC,KAAnD,QAAgE,kBAAhE;AAEA,IAAMC,iBAAiB,GAAGT,GAAH,mBAAvB;AAaA,IAAMU,gBAAgB,GAAGV,GAAH,oBAAtB;AAcA,IAAMW,eAAe,GAAGX,GAAH,oBAArB;;AAYA,SAASY,UAAT,GAAsB;AAAA;;AAAA,qBAEMV,WAAW,CAACO,iBAAD,CAFjB;AAAA;AAAA,MAEXI,aAFW;;AAAA,sBAGMX,WAAW,CAACS,eAAD,CAHjB;AAAA;AAAA,MAGXG,aAHW;;AAAA,kBAIeb,QAAQ,CAACS,gBAAD,CAJvB;AAAA,MAIVK,OAJU,aAIVA,OAJU;AAAA,MAIDC,KAJC,aAIDA,KAJC;AAAA,MAIMC,IAJN,aAIMA,IAJN;;AAMlB,MAAIF,OAAJ,EAAa,OAAO,gCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAEX,SACI,MAAC,IAAD,QACI,MAAC,MAAD,QACI,MAAC,MAAD,CAAQ,OAAR,QACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,4BAAZ;AAAyC,IAAA,SAAS;AAAlD,KACI,oCADJ,CADJ,CADJ,EAQI,MAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,SAAS;AAAzB,KACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,YAAZ;AAAyB,IAAA,SAAS;AAAlC,KACI,MAAC,MAAD;AACI,IAAA,OAAO,MADX;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAC,QAHT;AAGkB,IAAA,OAAO,EAAE,mBAAM;AACzBL,MAAAA,aAAa,CAAC;AACVM,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAE;AACHC,YAAAA,GAAG,EAAE,8CADF;AAEHC,YAAAA,YAAY,EAAE;AAFX,WADA;AAKPC,UAAAA,cAAc,EAAE,CAAC;AAAEC,YAAAA,KAAK,EAAEd;AAAT,WAAD;AALT;AADD,OAAD,CAAb;AASH;AAbL,yBADJ,CADJ,CARJ,EA0BI,MAAC,MAAD,CAAQ,OAAR,QACI,MAAC,IAAD,QACI,MAAC,YAAD;AACI,IAAA,UAAU,MADd;AAEI,IAAA,YAAY,EAAE;AAAEe,MAAAA,QAAQ,EAAE,QAAZ;AAAsBC,MAAAA,MAAM,EAAE;AAA9B,KAFlB;AAGI,IAAA,KAAK,EAAET,IAAI,CAACU,UAAL,CAAgBC,KAH3B;AAII,IAAA,UAAU,EAAE,oBAAAC,IAAI,EAAI;AAChB,aACI,MAAC,YAAD,CAAc,IAAd;AAAmB,QAAA,EAAE,EAAEA,IAAI,CAACC;AAA5B,SACI,MAAC,KAAD,OADJ,CADJ;AAKH;AAVL,IADJ,CADJ,CA1BJ,CADJ,CADJ;AA+CH;;GAxDQlB,U;UAEmBV,W,EACAA,W,EACSD,Q;;;KAJ5BW,U;AA0DT,eAAeA,UAAf,C,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { Button, Card, Layout, Page, ResourceList, Stack } from '@shopify/polaris';\n\nconst CREATE_SCRIPT_TAG = gql`\nmutation scriptTagCreate($input: ScriptTagInput!){\n    scriptTagCreate(input: $input){\n        scriptTag {\n            id\n        }\n        userErrors {\n            field\n            message\n        }\n    }\n}`;\n\nconst QUERY_SCRIPTTAGS = gql`\nquery{\n    scriptTags(first:5){\n      edges{\n        node{\n          id\n          src\n          displayScope\n        }\n      }\n    }\n  }\n`\n\nconst DELETE_SCRIPTAG = gql`\nmutation scriptTagDelete($id: ID!){\n    scriptTagDelete(id: $id){\n        deletedScriptTagId\n    \t\tuserErrors{\n          field\n          message\n        }\n    }\n}\n`\n\nfunction ScriptPage() {\n\n    const [createScripts] = useMutation(CREATE_SCRIPT_TAG)\n    const [deleteScripts] = useMutation(DELETE_SCRIPTAG)\n    const { loading, error, data } = useQuery(QUERY_SCRIPTTAGS)\n\n    if (loading) return <div>Loading...</div>\n    if (error) return <div>{error.message}</div>\n\n    return (\n        <Page>\n            <Layout>\n                <Layout.Section>\n                    <Card title=\"These are the Script Tags:\" sectioned>\n                        <p>\n                            Create or delete\n                        </p>\n                    </Card>\n                </Layout.Section>\n                <Layout.Section secondary>\n                    <Card title=\"Delete Tag\" sectioned>\n                        <Button\n                            primary\n                            size=\"slim\"\n                            type=\"submit\" onClick={() => {\n                                createScripts({\n                                    variables: {\n                                        input: {\n                                            src: \"https://e426939d3a5e.ngrok.io/test-script.js\",\n                                            displayScope: \"ALL\"\n                                        },\n                                        refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\n                                    }\n                                })\n                            }}>Create Script Tag</Button>\n                    </Card>\n                </Layout.Section>\n                <Layout.Section>\n                    <Card>\n                        <ResourceList\n                            showHeader\n                            resourceName={{ singular: 'Script', plural: 'Scripts' }}\n                            items={data.scriptTags.edges}\n                            renderItem={item => {\n                                return (\n                                    <ResourceList.Item id={item.id}>\n                                        <Stack></Stack>\n                                    </ResourceList.Item>\n                                )\n                            }}\n                        />\n                    </Card>\n                </Layout.Section>\n            </Layout>\n        </Page>\n    )\n}\n\nexport default ScriptPage;\n\n\n    // <div>\n    //     <h1>These are the script tags right now:</h1>\n    //     <button type='submit' onClick={() => {\n    //         console.log(createScripts)\n    //         createScripts({\n    //             variables: {\n    //                 input: {\n    //                     src: \"https://fd8b3860e19d.ngrok.io/test-script.js\",\n    //                     displayScope: \"ALL\"\n    //                 }\n    //             },\n    //             refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\n    //         })\n    //     }}>\n    //         Create Script Tag\n    //     </button>\n\n    //     {\n    //         data.scriptTags.edges.map(item => {\n    //             return (\n    //                 <div key={item.node.id}>\n    //                     <p>\n    //                         {item.node.id}\n    //                     </p>\n    //                     <button type='submit' onClick={() => {\n    //                         deleteScripts({\n    //                             variables: {\n    //                                 id: item.node.id\n    //                             },\n    //                             refetchQueries: [{ query: QUERY_SCRIPTTAGS }]\n    //                         })\n    //                     }}>Delete Script Tag</button>\n    //                 </div>\n\n    //             )\n    //         })\n    //     }\n    // </div >"]},"metadata":{},"sourceType":"module"}