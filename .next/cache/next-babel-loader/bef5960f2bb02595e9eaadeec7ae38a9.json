{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery getProducts($ids: [ID!]!){\\n    nodes(ids: $ids){\\n      ... on Product{\\n        title\\n        handle\\n        id\\n      }\\n    }\\n  }\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\n\nfunction ProductList() {\n  _s();\n\n  var _useQuery = useQuery(GET_PRODUCTS_BY_ID, {\n    variables: {\n      ids: store.get('ids')\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", null, \"Loading...\");\n  if (error) return __jsx(\"div\", null, error.message);\n  console.log(data);\n  return __jsx(Card, null, __jsx(ResourceList, {\n    showHeader: true,\n    resourceName: {\n      singular: 'Product',\n      plural: 'Products'\n    },\n    items: data.nodes,\n    renderItem: function renderItem(item) {\n      var media = __jsx(Thumbnail, {\n        source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : '',\n        alt: item.images.edges[0] ? item.images.edges[0].altText : ''\n      });\n\n      var price = item.variants.edge[0].node.price;\n      return __jsx(ResourceList.Item, {\n        id: item.id,\n        media: media,\n        accessibilityLabel: 'View details for ${item.title}'\n      }, __jsx(Stack, null, __jsx(Stack.Item, {\n        fill: true\n      }, __jsx(\"h3\", null, __jsx(TextStyle, {\n        variation: \"strong\"\n      }, item.title))), __jsx(Stack.Item, null, __jsx(\"p\", null, \"$\", price))));\n    }\n  })) // <div>\n  //   <h1>Hello from Productlist</h1>\n  //   {\n  //     data.nodes.map(item => {\n  //       return (\n  //         <p key={item.id}>{item.title}</p>\n  //       )\n  //     })\n  //   }\n  // </div>\n  ;\n}\n\n_s(ProductList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n\n_c = ProductList;\nexport default ProductList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"sources":["/Users/bertrandshao/Desktop/Repositories/Shopify-API/components/ProductList.js"],"names":["gql","useQuery","Card","ResourceList","Stack","TextStyle","Thumbnail","store","GET_PRODUCTS_BY_ID","ProductList","variables","ids","get","loading","error","data","message","console","log","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","edge","id","title"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,KAA7B,EAAoCC,SAApC,EAA+CC,SAA/C,QAAgE,kBAAhE;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,IAAMC,kBAAkB,GAAGR,GAAH,mBAAxB;;AAWA,SAASS,WAAT,GAAuB;AAAA;;AAAA,kBAEYR,QAAQ,CAACO,kBAAD,EAAqB;AAAEE,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEJ,KAAK,CAACK,GAAN,CAAU,KAAV;AAAP;AAAb,GAArB,CAFpB;AAAA,MAEbC,OAFa,aAEbA,OAFa;AAAA,MAEJC,KAFI,aAEJA,KAFI;AAAA,MAEGC,IAFH,aAEGA,IAFH;;AAIrB,MAAIF,OAAJ,EAAa,OAAO,gCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAEXC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SACE,MAAC,IAAD,QACE,MAAC,YAAD;AACE,IAAA,UAAU,MADZ;AAEE,IAAA,YAAY,EAAE;AAAEI,MAAAA,QAAQ,EAAE,SAAZ;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAFhB;AAGE,IAAA,KAAK,EAAEL,IAAI,CAACM,KAHd;AAIE,IAAA,UAAU,EAAE,oBAAAC,IAAI,EAAI;AAClB,UAAMC,KAAK,GACT,MAAC,SAAD;AACE,QAAA,MAAM,EAAED,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAuBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBC,IAArB,CAA0BC,WAAjD,GAA+D,EADzE;AAGE,QAAA,GAAG,EACDL,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,IAAuBH,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,EAAqBG,OAA5C,GAAsD;AAJ1D,QADF;;AAQA,UAAMC,KAAK,GAAGP,IAAI,CAACQ,QAAL,CAAcC,IAAd,CAAmB,CAAnB,EAAsBL,IAAtB,CAA2BG,KAAzC;AACA,aACE,MAAC,YAAD,CAAc,IAAd;AACE,QAAA,EAAE,EAAEP,IAAI,CAACU,EADX;AAEE,QAAA,KAAK,EAAET,KAFT;AAGE,QAAA,kBAAkB,EAAE;AAHtB,SAKE,MAAC,KAAD,QACE,MAAC,KAAD,CAAO,IAAP;AAAY,QAAA,IAAI;AAAhB,SACE,kBACE,MAAC,SAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SACGD,IAAI,CAACW,KADR,CADF,CADF,CADF,EAQE,MAAC,KAAD,CAAO,IAAP,QACE,sBAAKJ,KAAL,CADF,CARF,CALF,CADF;AAoBD;AAlCH,IADF,CADF,CAwCE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjDF;AAmDD;;GA5DQpB,W;UAE0BR,Q;;;KAF1BQ,W;AA8DT,eAAeA,WAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Card, ResourceList, Stack, TextStyle, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\n\nconst GET_PRODUCTS_BY_ID = gql`\nquery getProducts($ids: [ID!]!){\n    nodes(ids: $ids){\n      ... on Product{\n        title\n        handle\n        id\n      }\n    }\n  }`;\n\nfunction ProductList() {\n\n  const { loading, error, data } = useQuery(GET_PRODUCTS_BY_ID, { variables: { ids: store.get('ids') } })\n\n  if (loading) return <div>Loading...</div>\n  if (error) return <div>{error.message}</div>\n\n  console.log(data)\n\n  return (\n    <Card>\n      <ResourceList\n        showHeader\n        resourceName={{ singular: 'Product', plural: 'Products' }}\n        items={data.nodes}\n        renderItem={item => {\n          const media = (\n            <Thumbnail\n              source={item.images.edges[0] ? item.images.edges[0].node.originalSrc : ''\n              }\n              alt={\n                item.images.edges[0] ? item.images.edges[0].altText : ''\n              } />\n          );\n          const price = item.variants.edge[0].node.price;\n          return (\n            <ResourceList.Item\n              id={item.id}\n              media={media}\n              accessibilityLabel={'View details for ${item.title}'}\n            >\n              <Stack>\n                <Stack.Item fill>\n                  <h3>\n                    <TextStyle variation='strong'>\n                      {item.title}\n                    </TextStyle>\n                  </h3>\n                </Stack.Item>\n                <Stack.Item>\n                  <p>${price}</p>\n                </Stack.Item>\n              </Stack>\n            </ResourceList.Item >\n          )\n        }}\n      />\n\n    </Card>\n    // <div>\n    //   <h1>Hello from Productlist</h1>\n    //   {\n    //     data.nodes.map(item => {\n    //       return (\n    //         <p key={item.id}>{item.title}</p>\n    //       )\n    //     })\n    //   }\n    // </div>\n  )\n}\n\nexport default ProductList;"]},"metadata":{},"sourceType":"module"}