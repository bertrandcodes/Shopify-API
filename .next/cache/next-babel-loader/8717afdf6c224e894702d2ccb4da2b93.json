{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { EmptyState, Layout, Page } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport store from 'store-js';\nimport ProductList from '../components/ProductList';\nimport axios from 'axios';\n\nfunction Index() {\n  const {\n    0: modal,\n    1: setModal\n  } = useState({\n    open: false\n  });\n  const emptyState = !store.get('ids');\n\n  function handleSelection(resources) {\n    const idsFromResources = resources.selection.map(product => product.id);\n    setModal({\n      open: false\n    });\n    store.set('ids', idsFromResources);\n  }\n\n  async function makeApiCall(products) {\n    const url = '/api/products';\n    axios.post(url, products).then(result => console.log(result)).catch(err => console.log(err));\n  }\n\n  return __jsx(Page, null, __jsx(TitleBar, {\n    primaryAction: {\n      content: 'Select New Product',\n      onAction: () => setModal({\n        open: true\n      })\n    }\n  }), __jsx(ResourcePicker, {\n    resourceType: \"Product\",\n    showVariants: false,\n    open: modal.open,\n    onCancel: () => setModal({\n      open: false\n    }),\n    onSelection: resources => handleSelection(resources)\n  }), emptyState ? __jsx(Layout, null, __jsx(EmptyState, {\n    heading: \"Manage your inventory transfers\",\n    action: {\n      content: 'Select Products',\n      onAction: () => setModal({\n        open: true\n      })\n    },\n    image: \"https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg\"\n  }, __jsx(\"p\", null, \"Select Products\"))) : __jsx(ProductList, null));\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/bertrandshao/Desktop/Repositories/Shopify-API/pages/index.js"],"names":["React","useState","EmptyState","Layout","Page","ResourcePicker","TitleBar","store","ProductList","axios","Index","modal","setModal","open","emptyState","get","handleSelection","resources","idsFromResources","selection","map","product","id","set","makeApiCall","products","url","post","then","result","console","log","catch","err","content","onAction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,IAA7B,QAAyC,kBAAzC;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,2BAAzC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,KAAT,GAAiB;AAEb,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAlC;AACA,QAAMC,UAAU,GAAG,CAACP,KAAK,CAACQ,GAAN,CAAU,KAAV,CAApB;;AAEA,WAASC,eAAT,CAAyBC,SAAzB,EAAoC;AAChC,UAAMC,gBAAgB,GAAGD,SAAS,CAACE,SAAV,CAAoBC,GAApB,CAAyBC,OAAD,IAAaA,OAAO,CAACC,EAA7C,CAAzB;AACAV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAN,IAAAA,KAAK,CAACgB,GAAN,CAAU,KAAV,EAAiBL,gBAAjB;AACH;;AAED,iBAAeM,WAAf,CAA2BC,QAA3B,EAAqC;AACjC,UAAMC,GAAG,GAAG,eAAZ;AACAjB,IAAAA,KAAK,CAACkB,IAAN,CAAWD,GAAX,EAAgBD,QAAhB,EACKG,IADL,CACUC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CADpB,EAEKG,KAFL,CAEWC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAFlB;AAGH;;AAED,SACI,MAAC,IAAD,QACI,MAAC,QAAD;AACI,IAAA,aAAa,EAAE;AACXC,MAAAA,OAAO,EAAE,oBADE;AAEXC,MAAAA,QAAQ,EAAE,MAAMvB,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD;AAFb;AADnB,IADJ,EAOI,MAAC,cAAD;AACI,IAAA,YAAY,EAAC,SADjB;AAEI,IAAA,YAAY,EAAE,KAFlB;AAGI,IAAA,IAAI,EAAEF,KAAK,CAACE,IAHhB;AAII,IAAA,QAAQ,EAAE,MAAMD,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAJ5B;AAKI,IAAA,WAAW,EAAGI,SAAD,IAAeD,eAAe,CAACC,SAAD;AAL/C,IAPJ,EAcKH,UAAU,GACP,MAAC,MAAD,QACI,MAAC,UAAD;AACI,IAAA,OAAO,EAAC,iCADZ;AAEI,IAAA,MAAM,EAAE;AACJoB,MAAAA,OAAO,EAAE,iBADL;AAEJC,MAAAA,QAAQ,EAAE,MAAMvB,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD;AAFpB,KAFZ;AAMI,IAAA,KAAK,EAAC;AANV,KAOI,mCAPJ,CADJ,CADO,GAaP,MAAC,WAAD,OA3BR,CADJ;AA+BH;;AAGD,eAAeH,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport { EmptyState, Layout, Page } from '@shopify/polaris';\nimport { ResourcePicker, TitleBar } from '@shopify/app-bridge-react';\nimport store from 'store-js';\nimport ProductList from '../components/ProductList';\nimport axios from 'axios';\n\nfunction Index() {\n\n    const [modal, setModal] = useState({ open: false });\n    const emptyState = !store.get('ids');\n\n    function handleSelection(resources) {\n        const idsFromResources = resources.selection.map((product) => product.id);\n        setModal({ open: false });\n        store.set('ids', idsFromResources)\n    }\n\n    async function makeApiCall(products) {\n        const url = '/api/products';\n        axios.post(url, products)\n            .then(result => console.log(result))\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <Page>\n            <TitleBar\n                primaryAction={{\n                    content: 'Select New Product',\n                    onAction: () => setModal({ open: true })\n                }}\n            />\n            <ResourcePicker\n                resourceType=\"Product\"\n                showVariants={false}\n                open={modal.open}\n                onCancel={() => setModal({ open: false })}\n                onSelection={(resources) => handleSelection(resources)}\n            />\n            {emptyState ?\n                <Layout>\n                    <EmptyState\n                        heading=\"Manage your inventory transfers\"\n                        action={{\n                            content: 'Select Products',\n                            onAction: () => setModal({ open: true })\n                        }}\n                        image=\"https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg\">\n                        <p>Select Products</p>\n                    </EmptyState>\n                </Layout>\n                :\n                <ProductList />}\n        </Page>\n    )\n}\n\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}